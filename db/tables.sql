Create table BPS_USER_INFO (
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
USER_ID VARCHAR(15) NOT NULL UNIQUE,
USER_PASS VARCHAR(15) NOT NULL,
USER_TYPE VARCHAR(20) NOT NULL,
USER_NAME VARCHAR(50) NOT NULL,
USER_EMAIL VARCHAR(100) NOT NULL UNIQUE,
USER_PHONE VARCHAR(20),
USER_GROUP_ID VARCHAR(15),
USER_IMAGE BLOB
);

create table BPS_PROCESS(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
PROC_ID VARCHAR(50) NOT NULL UNIQUE,
PROC_NAME VARCHAR(50) NOT NULL UNIQUE,
PROC_CURR_VER VARCHAR(10) NOT NULL,
PROC_NOTN VARCHAR(10) NOT NULL,
PROC_AUTHOR VARCHAR(10) NOT NULL,
PROC_DESC VARCHAR(255)
);

create table BPS_PROCESS_VER(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
PROV_ID BIGINT NOT NULL,
PROV_VER VARCHAR(10) NOT NULL,
PROV_NOTN VARCHAR(10) NOT NULL,
PROV_COMMENT VARCHAR(255) NOT NULL,
PROV_MODF_BY VARCHAR(10) NOT NULL,
PROV_MODF_DT TIMESTAMP NOT NULL,
FOREIGN KEY(PROV_ID) REFERENCES BPS_PROCESS(ID)
);

create table BPS_LOGS(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
LOG_LEVEL VARCHAR(10) NOT NULL,
LOG_SOURCE VARCHAR(255) NOT NULL,
LOG_MESSAGE VARCHAR(10000) NOT NULL,
LOG_USER VARCHAR(10) NOT NULL,
LOG_DATE TIMESTAMP NOT NULL
);

create table BPS_AUDIT(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
AUD_OBJECT VARCHAR(50) NOT NULL,
AUD_ACTION VARCHAR(10) NOT NULL,
AUD_PREV_ENT VARCHAR(10000),
AUD_CURR_ENT VARCHAR(10000),
AUD_USER VARCHAR(10) NOT NULL,
AUD_DATE TIMESTAMP NOT NULL
);

create table BPS_PROC_TEMPL(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
TEM_ID VARCHAR(50) NOT NULL UNIQUE,
TEM_NAME VARCHAR(50) NOT NULL UNIQUE,
TEM_NOTN VARCHAR(10) NOT NULL,
TEM_DESC VARCHAR(255)
);

create table BPS_ORGANIZATION(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ORG_ID VARCHAR(50) NOT NULL UNIQUE,
ORG_NAME VARCHAR(50) NOT NULL,
ORG_DESC VARCHAR(1000),
ORG_TYPE VARCHAR(1),
ORG_ADDR VARCHAR(255),
ORG_CR_DT TIMESTAMP NOT NULL
);

create table BPS_ORG_PROC(
ID BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
ORP_PROC_ID BIGINT NOT NULL,
ORP_ORG_ID BIGINT NOT NULL,
FOREIGN KEY(ORP_PROC_ID) REFERENCES BPS_PROCESS(ID),
FOREIGN KEY(ORP_ORG_ID) REFERENCES BPS_ORGANIZATION(ID)
);